<% content_for :head do %>

<style type="text/css">
body {
	background-color: transparent;
}
</style>


<script type="text/javascript">

var channel_num = <%= raw @page.widget(PlayerWidget).stack.entries_scoped.first.title.to_json %>;
var autoTime;

function setTime(clocks) {
	var time = $p.now();
	var noonElement = $p.getById("noon")

	var hour = time.getHours();
	var noon = hour >= 12 ? "下午" : "上午" ;
	noonElement.innerHTML = noon;
	clocks[0].innerHTML = parseInt(hour/10, 10);
	clocks[1].innerHTML = hour%10;

	var minute = time.getMinutes();
	clocks[2].innerHTML = parseInt(minute/10, 10);
	clocks[3].innerHTML = minute%10;

	autoTime = null;
	autoTime = setTimeout(function() {
		setTime(clocks);
	}, 5000);
}

var noticeWidget = $p.instance({
	init: function(element) {
		var parentElement = $p.findByClass(element, "parent");
		var innerElement = $p.findByClass(element, "inner");
		element.scrollLeft = 0;
		
		var self = this;
		//have bug if the initial time is too short!
		setTimeout(function(){
			var scrollWidth = innerElement.offsetWidth;
			var parentWidth = parentElement.clientWidth;
			if (parentWidth < scrollWidth) {
				var left = 0;
				self.autoNotice = self.scroll(parentElement, scrollWidth, parentWidth, left);
			}
		}, 10000)
	},

	scroll: function(element, scrollWidth, parentWidth, left) {
		
		var currentLeft = left;
		currentLeft += 60;
		if (currentLeft > scrollWidth) {
			currentLeft = 0;
		}
		element.scrollLeft = currentLeft;
		
		this.autoNotice = null;
		var self = this;
		this.autoNotice = setTimeout(function() {
			 self.scroll(element, scrollWidth, parentWidth, currentLeft);
		}, 600)
	}
})

var MessageWidget = $p.clazz({
	
	init: function(element, paginateObj,paginateTime, scrollLength, scrollTime) {
		this.elements = $p.queryByClass(element, "message");
		this.paginateTime = paginateTime || 1000;
		this.scrollLength = scrollLength || 40;
		this.scrollTime = scrollTime || 1000;
		this.paginateObj = paginateObj;
	},
	
	active: function() {
		if (this.elements.length < 1) { return };
		this.currentIndex =  this.currentIndex || 0;
		this.show();
		
		var self = this;
		setTimeout(function(){
			self.next();
		}, this.paginateTime);
	},
	
	show: function() {
		if (this._preIndex != null && this._preIndex != undefined && this._preIndex != this.currentIndex) {
			$p.toggle(this.elements[this._preIndex], false);
		}
		this.currentElement = this.elements[this.currentIndex];
		
		
		$p.toggle(this.currentElement, true);
		this.paginateObj.active(this.currentIndex);
		
		var parentElement = $p.findByClass(this.currentElement, "parent");
		if(parentElement != null && parentElement != undefined) { parentElement.scrollTop = 0 }
		
		var self = this;
		setTimeout(function() {
			self.judgeToScroll();
		}, 5000);//have bug if the initial time is too short!
		
		this._preIndex = this.currentIndex;
	},
	
	judgeToScroll: function() {
		var parentElement = $p.findByClass(this.currentElement, "parent");
		if (parentElement == null || parentElement == undefined) {return};
		
		var innerElement = $p.findByClass(this.currentElement, "inner");
		var scrollHeight = innerElement.offsetHeight;
		var parentHeight = parentElement.clientHeight;
		
		if (parentHeight < scrollHeight) {
			var top = 0;
			this.scroll(parentElement, scrollHeight, parentHeight, top, 0);
		}
	},
	
	scroll: function(element, scrollHeight, parentHeight, top) {
		clearTimeout(this.autoMessageId);
		
		var currentTop = top;
		currentTop += this.scrollLength;
		if (currentTop > scrollHeight) { currentTop = 0; };
		element.scrollTop = currentTop;
		
		var self = this;
		this.autoMessageId = setTimeout(function() {
			self.scroll(element, scrollHeight, parentHeight, currentTop);
		}, this.scrollTime)
	},
	
	next: function() {
		clearTimeout(this.autoMessageId);
		clearTimeout(this.autoPaginateId);
		
		var parentElement = $p.findByClass(this.elements[this.currentIndex], "parent");
		if (parentElement != null && parentElement != undefined) {
			parentElement.scrollTop = 0;
		}
		
		this.currentIndex < this.elements.length - 1 ? (this.currentIndex += 1) : (this.currentIndex = 0);
		this.show();
		
		var self = this;
		this.autoPaginateId = setTimeout(function(){
			self.next();
		}, this.paginateTime);
	}
});

var paginateWidget = $p.clazz({
	init: function(element) {
		this.elements = $p.queryByClass(element, "navi");
	},
	
	active: function(num) {
		
		if (this.elements.length == 0) {return};
		
		var currentIndex = num;
		
		if (this._preIndex != null && this._preIndex != undefined && this._preIndex != currentIndex) {
			$p.removeClassName(this.elements[this._preIndex], "active");
		}
		$p.addClassName(this.elements[currentIndex], "active");
		this._preIndex = currentIndex;
	}
})

$p.ready(function() {

	$a.Broadcast.playChannel(channel_num || 0);
	var p = $p.getById("player");
	$a.Broadcast.screenDimension(p.offsetLeft, p.offsetTop, p.offsetWidth, p.offsetHeight);

	var clocks = $p.queryByClass($p.getById("time"), "num");
	setTime(clocks);

	<% if Notice.online.last.present? %>
		noticeWidget.init($p.getById("notice"));
	<% end %>

	setTimeout(function() {
		window.location.href = window.location.href;
	}, 1000*60*10)
	
	var newsPaginateWidget = new paginateWidget($p.getById("news-paginate"));
	var newsWidget = new MessageWidget($p.getById("news"), newsPaginateWidget, 25000, null ,1500);
	newsWidget.active();
	
	var informationPaginateWidget = new paginateWidget($p.getById("information-paginate"));
	var informationWidget = new MessageWidget($p.getById("information"), informationPaginateWidget, 40000, 60,2000);
	informationWidget.active();
	
	
})

</script>

<% @news = @page.widget(NewsWidget).stack.entries_scoped.online.limit(5) %>
<% @informations = @page.widget(InformationWidget).stack.entries_scoped.online.limit(5) %>
<% @weather = Weather.where(:title => Date.today.to_s).first || Weather.new %>
<% end %>

<div class="panel">

	<div id="notice">
		<% if notice = Bubble::Stack.where(:code => "notice").first.entries_scoped.online.first %>
		<div class="title">公告:</div>
		<div class="parent">
			<div class="inner">
				<%= notice.title %>
			</div>
		</div>
		<% end %>
	</div>

	<div id="player" class="player"></div>

	<div id="news" class="news">
		<% @news.each_with_index do |message,i| %>
			<div class="message" style="display:<%=raw(i == 0 ? "block": "none") %>">
			<% if message.poster_url.blank? %>
				<div class="title">最近新闻</div>
				<div class="content parent"><div class="inner"><%=raw message.content %></div></div>
			<% else %>
				<div class="poster"><div class="inner"><%= image_tag message.poster_url %></div></div>
			<% end %>
			</div>
		<% end %>
		
		<div id="news-paginate" class="paginate">
		<% @news.size.times do |i| %><span class="navi <%=raw (i == 0 ? "active" : "") %>"><%= i + 1 %></span><% end %>
		</div>
	</div>
	
	<div class="weather-icon <%= @weather.code %>"></div>

	<div class="weather">
		<div class="temperature"><%= @weather.extra1 %><span class="unit">℃</span></div>
		<div class="memo"><%= @weather.extra2 %></div>
		<div class="memo"><%= @weather.extra3 %></div>
	</div>

	<div class="clock">
		<div class="date">
			<% today = Date.today %>
			<%=l today, :format => :long %></div>
		<div id="time" class="time">
			<div id="noon" class="noon"></div>
			<div class="num"></div>
			<div class="num"></div>
			<div class="space">:</div>
			<div class="num"></div>
			<div class="num"></div>
		</div>
	</div>

	<div id="information" class="information">
		<% @informations.each_with_index do |information, i| %>
			<div class="message" style="display:<%=raw(i == 0 ? "block": "none") %>">
			<% if information.poster_url.blank? %>
				<div class="title">参考消息</div>
				<div class="content parent"><div class="inner"><%=raw information.content %></div></div>
			<% else %>
				<div class="poster"><div class="inner"><%= image_tag information.poster_url %></div></div>
			<% end %>
			</div>
		<% end %>
		
		<div id="information-paginate" class="paginate">
		<% @informations.size.times do |i| %><span class="navi <%=raw (i == 0 ? "active" : "") %>"><%= i + 1 %></span><% end %>
		</div>
	</div>

</div>